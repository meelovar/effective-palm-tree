services:
  web:
    build:
      dockerfile: docker/web/Dockerfile
      context: .
    env_file:
      - .env
    volumes:
      - web_static_data:/home/py_user/app/static
    depends_on:
      db:
        condition: service_healthy

  dramatiq:
    build:
      dockerfile: docker/web/Dockerfile
      context: .
    env_file:
      - .env
    command: "rundramatiq"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - web_static_data:/opt/static:ro
    depends_on:
      - web

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${MQ_USER}
      - RABBITMQ_DEFAULT_PASS=${MQ_PASSWORD}
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  web_static_data:
  db_data:
  rabbitmq_data:
